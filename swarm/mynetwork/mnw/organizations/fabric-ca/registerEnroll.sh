#!/bin/bash

function createSas() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/sas.org.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/sas.org.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@ca.sas.org.com:7054 --caname ca-sas --tls.certfiles "${PWD}/organizations/fabric-ca/sas/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/ca-sas-org-com-7054-ca-sas.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/ca-sas-org-com-7054-ca-sas.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/ca-sas-org-com-7054-ca-sas.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/ca-sas-org-com-7054-ca-sas.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/sas.org.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/sas.org.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/sas/ca-cert.pem" "${PWD}/organizations/peerOrganizations/sas.org.com/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/sas.org.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/sas/ca-cert.pem" "${PWD}/organizations/peerOrganizations/sas.org.com/tlsca/tlsca.sas.org.com-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/sas.org.com/ca"
  cp "${PWD}/organizations/fabric-ca/sas/ca-cert.pem" "${PWD}/organizations/peerOrganizations/sas.org.com/ca/ca.sas.org.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-sas --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/sas/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-sas --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/sas/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-sas --id.name sasadmin --id.secret sasadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/sas/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@ca.sas.org.com:7054 --caname ca-sas -M "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/msp" --csr.hosts peer0.sas.org.com --tls.certfiles "${PWD}/organizations/fabric-ca/sas/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/sas.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@ca.sas.org.com:7054 --caname ca-sas -M "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/tls" --enrollment.profile tls --csr.hosts peer0.sas.org.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/sas/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/sas.org.com/peers/peer0.sas.org.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@ca.sas.org.com:7054 --caname ca-sas -M "${PWD}/organizations/peerOrganizations/sas.org.com/users/User1@sas.org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/sas/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/sas.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/sas.org.com/users/User1@sas.org.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://sasadmin:sasadminpw@ca.sas.org.com:7054 --caname ca-sas -M "${PWD}/organizations/peerOrganizations/sas.org.com/users/Admin@sas.org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/sas/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/sas.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/sas.org.com/users/Admin@sas.org.com/msp/config.yaml"
}

function createQuiron() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/quiron.org.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/quiron.org.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@ca.quiron.org.com:8054 --caname ca-quiron --tls.certfiles "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/ca-quiron-org-com-8054-ca-quiron.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/ca-quiron-org-com-8054-ca-quiron.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/ca-quiron-org-com-8054-ca-quiron.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/ca-quiron-org-com-8054-ca-quiron.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/quiron.org.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/quiron.org.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem" "${PWD}/organizations/peerOrganizations/quiron.org.com/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/quiron.org.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem" "${PWD}/organizations/peerOrganizations/quiron.org.com/tlsca/tlsca.quiron.org.com-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/quiron.org.com/ca"
  cp "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem" "${PWD}/organizations/peerOrganizations/quiron.org.com/ca/ca.quiron.org.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-quiron --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-quiron --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-quiron --id.name quironadmin --id.secret quironadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@ca.quiron.org.com:8054 --caname ca-quiron -M "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/msp" --csr.hosts peer0.quiron.org.com --tls.certfiles "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/quiron.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@ca.quiron.org.com:8054 --caname ca-quiron -M "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/tls" --enrollment.profile tls --csr.hosts peer0.quiron.org.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/quiron.org.com/peers/peer0.quiron.org.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@ca.quiron.org.com:8054 --caname ca-quiron -M "${PWD}/organizations/peerOrganizations/quiron.org.com/users/User1@quiron.org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/quiron.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/quiron.org.com/users/User1@quiron.org.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://quironadmin:quironadminpw@ca.quiron.org.com:8054 --caname ca-quiron -M "${PWD}/organizations/peerOrganizations/quiron.org.com/users/Admin@quiron.org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/quiron/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/quiron.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/quiron.org.com/users/Admin@quiron.org.com/msp/config.yaml"
}

function createHla() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/hla.org.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/hla.org.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@ca.hla.org.com:9054 --caname ca-hla --tls.certfiles "${PWD}/organizations/fabric-ca/hla/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/ca-hla-org-com-9054-ca-hla.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/ca-hla-org-com-9054-ca-hla.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/ca-hla-org-com-9054-ca-hla.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/ca-hla-org-com-9054-ca-hla.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/hla.org.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/hla.org.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/hla/ca-cert.pem" "${PWD}/organizations/peerOrganizations/hla.org.com/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/hla.org.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/hla/ca-cert.pem" "${PWD}/organizations/peerOrganizations/hla.org.com/tlsca/tlsca.hla.org.com-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/hla.org.com/ca"
  cp "${PWD}/organizations/fabric-ca/hla/ca-cert.pem" "${PWD}/organizations/peerOrganizations/hla.org.com/ca/ca.hla.org.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-hla --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/hla/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-hla --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/hla/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-hla --id.name hlaadmin --id.secret hlaadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/hla/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@ca.hla.org.com:9054 --caname ca-hla -M "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/msp" --csr.hosts peer0.hla.org.com --tls.certfiles "${PWD}/organizations/fabric-ca/hla/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/hla.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@ca.hla.org.com:9054 --caname ca-hla -M "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/tls" --enrollment.profile tls --csr.hosts peer0.hla.org.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/hla/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/hla.org.com/peers/peer0.hla.org.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@ca.hla.org.com:9054 --caname ca-hla -M "${PWD}/organizations/peerOrganizations/hla.org.com/users/User1@hla.org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/hla/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/hla.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/hla.org.com/users/User1@hla.org.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://hlaadmin:hlaadminpw@ca.hla.org.com:9054 --caname ca-hla -M "${PWD}/organizations/peerOrganizations/hla.org.com/users/Admin@hla.org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/hla/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/hla.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/hla.org.com/users/Admin@hla.org.com/msp/config.yaml"
}

function createViamed() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/viamed.org.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/viamed.org.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@ca.viamed.org.com:10054 --caname ca-viamed --tls.certfiles "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/ca-viamed-org-com-10054-ca-viamed.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/ca-viamed-org-com-10054-ca-viamed.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/ca-viamed-org-com-10054-ca-viamed.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/ca-viamed-org-com-10054-ca-viamed.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/viamed.org.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/viamed.org.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem" "${PWD}/organizations/peerOrganizations/viamed.org.com/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/viamed.org.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem" "${PWD}/organizations/peerOrganizations/viamed.org.com/tlsca/tlsca.viamed.org.com-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/viamed.org.com/ca"
  cp "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem" "${PWD}/organizations/peerOrganizations/viamed.org.com/ca/ca.viamed.org.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-viamed --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-viamed --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-viamed --id.name viamedadmin --id.secret viamedadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@ca.viamed.org.com:10054 --caname ca-viamed -M "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/msp" --csr.hosts peer0.viamed.org.com --tls.certfiles "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/viamed.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@ca.viamed.org.com:10054 --caname ca-viamed -M "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/tls" --enrollment.profile tls --csr.hosts peer0.viamed.org.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/viamed.org.com/peers/peer0.viamed.org.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@ca.viamed.org.com:10054 --caname ca-viamed -M "${PWD}/organizations/peerOrganizations/viamed.org.com/users/User1@viamed.org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/viamed.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/viamed.org.com/users/User1@viamed.org.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://viamedadmin:viamedadminpw@ca.viamed.org.com:10054 --caname ca-viamed -M "${PWD}/organizations/peerOrganizations/viamed.org.com/users/Admin@viamed.org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/viamed/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/viamed.org.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/viamed.org.com/users/Admin@viamed.org.com/msp/config.yaml"
}


function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/org.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/org.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@ca.orderer.org.com:11054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/ca-orderer-org-com-11054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/ca-orderer-org-com-11054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/ca-orderer-org-com-11054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/ca-orderer-org-com-11054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/org.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/org.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/org.com/msp/tlscacerts/tlsca.org.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/org.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/org.com/tlsca/tlsca.org.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering orderer2"
    set -x
    fabric-ca-client register --caname ca-orderer --id.name orderer2 --id.secret orderer2pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
    { set +x; } 2>/dev/null

  infoln "Registering orderer3"
    set -x
    fabric-ca-client register --caname ca-orderer --id.name orderer3 --id.secret orderer3pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
    { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

# --------------------------------------------------------------------------------------------------------------------------------------------
  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@ca.orderer.org.com:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/msp" --csr.hosts orderer.org.com --csr.hosts localhost --csr.hosts orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/org.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@ca.orderer.org.com:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/tls" --enrollment.profile tls --csr.hosts orderer.org.com --csr.hosts localhost --csr.hosts orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer.org.com/msp/tlscacerts/tlsca.org.com-cert.pem"

  infoln "Generating the orderer2 msp"
  set -x
  fabric-ca-client enroll -u https://orderer2:orderer2pw@ca.orderer.org.com:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/msp" --csr.hosts orderer2.org.com --csr.hosts localhost --csr.hosts orderer2 --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/org.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates"
  set -x
  fabric-ca-client enroll -u https://orderer2:orderer2pw@ca.orderer.org.com:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/tls" --enrollment.profile tls --csr.hosts orderer2.org.com --csr.hosts localhost --csr.hosts orderer2 --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer2.org.com/msp/tlscacerts/tlsca.org.com-cert.pem"

  infoln "Generating the orderer3 msp"
  set -x
  fabric-ca-client enroll -u https://orderer3:orderer3pw@ca.orderer.org.com:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/msp" --csr.hosts orderer3.org.com --csr.hosts localhost --csr.hosts orderer3 --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/org.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates"
  set -x
  fabric-ca-client enroll -u https://orderer3:orderer3pw@ca.orderer.org.com:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/tls" --enrollment.profile tls --csr.hosts orderer3.org.com --csr.hosts localhost --csr.hosts orderer3 --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/org.com/orderers/orderer3.org.com/msp/tlscacerts/tlsca.org.com-cert.pem"
# --------------------------------------------------------------------------------------------------------------------------------------------
  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@ca.orderer.org.com:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/org.com/users/Admin@org.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/org.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/org.com/users/Admin@org.com/msp/config.yaml"
}
